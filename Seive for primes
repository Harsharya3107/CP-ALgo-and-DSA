Normal seive to print prime numbers

vector<int> seive(int n){
	int a[n];
	memset(a, 0, sizeof(a));
	vector<int> primes;
	for(int i=2;i*i<=n;i++){
		if(a[i]==0){
			for(int j=i*i; j<=n ; j=j+i){
				a[j]=1;
			}
		}
	}
	for(int i=2;i<n;i++){
		if(a[i]==0)
		primes.push_back(i);
	}
	return primes;
}


Segmented Seive

vector<char> segmentedSieveNoPreGen(long long L, long long R) {
    vector<char> isPrime(R - L + 1, true);
    long long lim = sqrt(R);
    for (long long i = 2; i <= lim; ++i)
        for (long long j = max(i * i, (L + i - 1) / i * i); j <= R; j += i)
            isPrime[j - L] = false;
    if (L == 1)
        isPrime[0] = false;
    return isPrime;
}
